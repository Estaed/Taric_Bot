---
description: 
globs: 
alwaysApply: false
---
# Project Structure Guide

This project follows a standard machine learning project structure:

- `data/`: Contains all data files
  - `raw/`: Raw JSON match data from Riot API
  - `cleaned/`: Processed CSV files
  - `features/`: Engineered features for training

- `models/`: Stores trained model checkpoints and weights

- `src/`: Source code
  - `clean_data.py`: Data cleaning pipeline
  - `features/`: Feature engineering scripts
  - `train_rl.py`: RL training implementation
  - `infer.py`: Model inference and game integration
  - `cli.py`: Command line interface

- `notebooks/`: Jupyter notebooks for analysis and visualization
  - `training_results.ipynb`: Training metrics and analysis

The main entry point for training is [src/train_rl.py](mdc:src/train_rl.py), which uses features generated by scripts in [src/features/](mdc:src/features).

